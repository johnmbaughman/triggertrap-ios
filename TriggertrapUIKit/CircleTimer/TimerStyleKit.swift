//
//  TimerStyleKit.swift
//  Triggertrap
//
//  Created by Valentin Kalchev on 09/10/2015.
//  Copyright (c) 2015 Triggertrap Ltd. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

open class TimerStyleKit : NSObject {

    //// Drawing Methods

    open class func drawCircleTimer(fraction: CGFloat = 0.337, clockwise: Bool = false, angle: CGFloat = 90, size: CGSize = CGSize(width: 200, height: 200), lineThickness: CGFloat = 4, nightTime: Bool = true) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let fill = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fill_Night = UIColor(red: 0.082, green: 0.082, blue: 0.082, alpha: 1.000)
        let foreground = UIColor(red: 0.514, green: 0.514, blue: 0.514, alpha: 1.000)
        let foreground_Night = UIColor(red: 0.243, green: 0.243, blue: 0.243, alpha: 1.000)

        //// Variable Declarations
        let expression: CGFloat = clockwise ? -fraction * 360 : fraction * 360
        let circleCenter: CGFloat = size.width - size.width / 2.0
        let circleSize: CGFloat = size.width - lineThickness
        let expression2: CGFloat = -circleSize / 2.0
        let foregroundColor = nightTime ? foreground_Night : foreground
        let fillColor = nightTime ? fill_Night : fill

        //// CircleBackground Drawing
        context?.saveGState()
        context?.translateBy(x: circleCenter, y: circleCenter)

        let circleBackgroundPath = UIBezierPath(ovalIn: CGRect(x: expression2, y: expression2, width: circleSize, height: circleSize))
        foregroundColor.setStroke()
        circleBackgroundPath.lineWidth = lineThickness
        circleBackgroundPath.stroke()

        context?.restoreGState()


        //// CircleBackground 2 Drawing
        context?.saveGState()
        context?.translateBy(x: circleCenter, y: circleCenter)
        context?.rotate(by: -angle * CGFloat(Double.pi) / 180)

        let circleBackground2Rect = CGRect(x: expression2, y: expression2, width: circleSize, height: circleSize)
        let circleBackground2Path = UIBezierPath()
        circleBackground2Path.addArc(withCenter: CGPoint(x: circleBackground2Rect.midX, y: circleBackground2Rect.midY), radius: circleBackground2Rect.width / 2, startAngle: 0 * CGFloat(Double.pi)/180, endAngle: -expression * CGFloat(Double.pi)/180, clockwise: true)

        fillColor.setStroke()
        circleBackground2Path.lineWidth = lineThickness
        circleBackground2Path.stroke()

        context?.restoreGState()
    }

}
